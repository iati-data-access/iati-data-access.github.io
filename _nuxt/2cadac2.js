/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{458:function(t,o,e){var content=e(465);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,e(59).default)("190d6c5a",content,!0,{sourceMap:!1})},464:function(t,o,e){"use strict";e(458)},465:function(t,o,e){var r=e(58)(!1);r.push([t.i,'canvas[data-v-4111b9cf]{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}.sankey[data-v-4111b9cf]{font-family:"Avenir",Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center;color:#2c3e50;height:400px}',""]),t.exports=r},468:function(t,o,e){"use strict";e.r(o);e(1),e(51),e(5);var r=e(445),n=e(471),c={props:{data:{default:function(){return[]}},from:{default:"provider_organisation.name_en"},to:{default:"receiver_organisation.name_en"},flow1:{default:"value_usd.sum_1"},flow3:{default:"value_usd.sum_3"},flow:{default:"value_usd.sum"}},computed:{chartData:function(){var t=this;return this.data.reduce((function(summary,o){return[0,void 0].includes(o[t.flow1])||summary.push({from:o[t.from],to:o[t.to],flow:o[t.flow1],_type:"incoming"}),[0,void 0].includes(o[t.flow3])||summary.push({from:o[t.from],to:o[t.to],flow:o[t.flow3],_type:"outgoing"}),[0,void 0].includes(o[t.flow])||summary.push({from:o[t.from],to:o[t.to],flow:o[t.flow],_type:"outgoing"}),summary}),[])},colours:function(){var t=["#6e40aa","#6849b9","#6153c7","#585fd2","#4e6cda","#4479df","#3988e1","#2f96e0","#26a5db","#1fb3d3","#1bc1c8","#19cdbb","#1bd9ac","#20e29d","#28ea8d","#34f07e","#44f470","#56f665","#6bf75c","#81f558","#98f357","#aff05b"];return this.chartData.reduce((function(summary,o){return"incoming"==o._type||o.from in summary||(summary[o.from]=t[Object.keys(summary).length]),summary}),{})}},mounted:function(){var t=this;r.e.register(n.b,n.a);var o=this.$refs.chart.getContext("2d"),e=function(o){return t.colours[o]||"#155366"};new r.e(o,{type:"sankey",data:{datasets:[{data:this.chartData,borderWidth:2,borderColor:"black",colorFrom:function(t){return e(t.dataset.data[t.dataIndex].from)},colorTo:function(t){return e(t.dataset.data[t.dataIndex].to)}}]},options:{maintainAspectRatio:!1}})}},l=(e(464),e(38)),component=Object(l.a)(c,(function(){var t=this._self._c;return t("div",{staticClass:"sankey"},[t("canvas",{ref:"chart",attrs:{id:"chart"}})])}),[],!1,null,"4111b9cf",null);o.default=component.exports},471:function(t,o,e){"use strict";e.d(o,"a",(function(){return j})),e.d(o,"b",(function(){return O}));var r=e(445),n=e(439);function c(t){return t&&-1!==["min","max"].indexOf(t)?t:"max"}const l=t=>void 0!==t;function f(t,o){const e=t.filter((t=>!o.has(t)));return e.length?e:t.slice(0,1)}const d=(a,b)=>a.x!==b.x?a.x-b.x:a.y-b.y;let h=-1;function x(t,o,e=function(){return h=h<100?h+1:0,h}()){let r=0;for(const n of t)n.node._visited!==e&&(n.node._visited=e,r+=n.node[o].length+x(n.node[o],o,e));return r}const y=t=>(a,b)=>x(a.node[t],t)-x(b.node[t],t)||a.node[t].length-b.node[t].length;function m(t,o){t.from.sort(y("from"));for(const e of t.from){const t=e.node;l(t.y)||(t.y=o,m(t,o)),o=Math.max(t.y+t.out,o)}return o}function w(t,o){t.to.sort(y("to"));for(const e of t.to){const t=e.node;l(t.y)||(t.y=o,w(t,o)),o=Math.max(t.y+t.in,o)}return o}function v(t,o){return l(t.y)?t.y:(t.y=o,o)}function M(t,o){t.sort(((a,b)=>Math.max(b.in,b.out)-Math.max(a.in,a.out)));const e=t[0];e.y=0;const r=m(e,0),n=w(e,0),c=function(t,o){const e=t.filter((t=>0===t.x)),r=t.filter((t=>t.x===o)),n=e.filter((t=>!l(t.y))),c=r.filter((t=>!l(t.y))),f=t.filter((t=>t.x>0&&t.x<o&&!l(t.y)));let d=e.reduce(((t,o)=>Math.max(t,o.y+o.out||0)),0),h=r.reduce(((t,o)=>Math.max(t,o.y+o.in||0)),0),x=0;return d>=h?(n.forEach((t=>{d=v(t,d),d=Math.max(d+t.out,w(t,d))})),c.forEach((t=>{h=v(t,h),h=Math.max(h+t.in,w(t,h))}))):(c.forEach((t=>{h=v(t,h),h=Math.max(h+t.in,w(t,h))})),n.forEach((t=>{d=v(t,d),d=Math.max(d+t.out,w(t,d))}))),f.forEach((o=>{let e=t.filter((t=>t.x===o.x&&l(t.y))).reduce(((t,o)=>Math.max(t,o.y+Math.max(o.in,o.out))),0);e=v(o,e),e=Math.max(e+o.in,m(o,e)),e=Math.max(e+o.out,w(o,e)),x=Math.max(x,e)})),Math.max(d,h,x)}(t,o);return Math.max(r,n,c)}function _(t,data,o,e){const r=[...t.values()],n=function(t,data){const o=new Set(data.map((t=>t.to))),e=new Set(data.map((t=>t.from))),r=new Set([...t.keys()]);let n=0;for(;r.size;){const e=f([...r],o);for(const o of e){const e=t.get(o);l(e.x)||(e.x=n),r.delete(o)}r.size&&(o.clear(),data.filter((t=>r.has(t.from))).forEach((t=>o.add(t.to))),n++)}return[...t.keys()].filter((t=>!e.has(t))).forEach((o=>{const e=t.get(o);e.column||(e.x=n)})),n}(t,data),c=o?function(t,o){let e=0,r=0;for(let n=0;n<=o;n++){let o=r;const c=t.filter((t=>t.x===n)).sort(((a,b)=>a.priority-b.priority));r=c[0].to.filter((t=>t.node.x>n+1)).reduce(((t,o)=>t+o.flow),0)||0;for(const t of c)t.y=o,o+=Math.max(t.out,t.in);e=Math.max(o,e)}return e}(r,n):M(r,n),h=function(t,o){let i=1,e=0,r=0,n=0;const c=[];t.sort(d);for(const l of t){if(l.y){if(0===l.x)c.push(l.y);else{for(e!==l.x&&(e=l.x,r=0),i=r+1;i<c.length&&!(c[i]>l.y);i++);r=i}l.y+=i*o,i++}n=Math.max(n,l.y+Math.max(l.in,l.out))}return n}(r,.03*c);return function(t,o){t.forEach((t=>{const e=Math[o](t.in||t.out,t.out||t.in),r=e<t.in,n=e<t.out;let c=0,l=t.from.length;t.from.sort(((a,b)=>a.node.y+a.node.out/2-(b.node.y+b.node.out/2))).forEach(((t,o)=>{r?t.addY=o*(e-t.flow)/(l-1):(t.addY=c,c+=t.flow)})),c=0,l=t.to.length,t.to.sort(((a,b)=>a.node.y+a.node.in/2-(b.node.y+b.node.in/2))).forEach(((t,o)=>{n?t.addY=o*(e-t.flow)/(l-1):(t.addY=c,c+=t.flow)}))}))}(r,e),{maxX:n,maxY:h}}function k(t,o,e){for(const r of t)if(r.key===o&&r.index===e)return r.addY;return 0}class O extends r.f{parseObjectData(meta,data,t,o){const{from:e="from",to:r="to",flow:n="flow"}=this.options.parsing,l=data.map((({[e]:t,[r]:o,[n]:c})=>({from:t,to:o,flow:c}))),{xScale:f,yScale:d}=meta,h=[],x=this._nodes=function(data){const t=new Map;for(let i=0;i<data.length;i++){const{from:o,to:e,flow:r}=data[i];if(t.has(o)){const n=t.get(o);n.out+=r,n.to.push({key:e,flow:r,index:i})}else t.set(o,{key:o,in:0,out:r,from:[],to:[{key:e,flow:r,index:i}]});if(t.has(e)){const n=t.get(e);n.in+=r,n.from.push({key:o,flow:r,index:i})}else t.set(e,{key:e,in:r,out:0,from:[{key:o,flow:r,index:i}],to:[]})}const o=(a,b)=>b.flow-a.flow;return[...t.values()].forEach((e=>{e.from=e.from.sort(o),e.from.forEach((o=>{o.node=t.get(o.key)})),e.to=e.to.sort(o),e.to.forEach((o=>{o.node=t.get(o.key)}))})),t}(l),{column:y,priority:m,size:w}=this.getDataset();if(m)for(const t of x.values())t.key in m&&(t.priority=m[t.key]);if(y)for(const t of x.values())t.key in y&&(t.column=!0,t.x=y[t.key]);const{maxX:v,maxY:M}=_(x,l,!!m,c(w));this._maxX=v,this._maxY=M;for(let i=0,t=l.length;i<t;++i){const t=l[i],o=x.get(t.from),e=x.get(t.to),r=o.y+k(o.to,t.to,i),n=e.y+k(e.from,t.from,i);h.push({x:f.parse(o.x,i),y:d.parse(r,i),_custom:{from:o,to:e,x:f.parse(e.x,i),y:d.parse(n,i),height:d.parse(t.flow,i)}})}return h.slice(t,t+o)}getMinMax(t){return{min:0,max:t===this._cachedMeta.xScale?this._maxX:this._maxY}}update(t){const{data:data}=this._cachedMeta;this.updateElements(data,0,data.length,t)}updateElements(t,o,e,r){const{xScale:c,yScale:l}=this._cachedMeta,f=this.resolveDataElementOptions(o,r),d=this.getSharedOptions(r,t[o],f),h=this.getDataset(),x=Object(n.Xb)(h.borderWidth,1)/2+.5,y=Object(n.Xb)(h.nodeWidth,10);for(let i=o;i<o+e;i++){const o=this.getParsed(i),e=o._custom,n=l.getPixelForValue(o.y);this.updateElement(t[i],i,{x:c.getPixelForValue(o.x)+y+x,y:n,x2:c.getPixelForValue(e.x)-x,y2:l.getPixelForValue(e.y),from:e.from,to:e.to,progress:"reset"===r?0:1,height:Math.abs(l.getPixelForValue(o.y+e.height)-n),options:this.resolveDataElementOptions(i,r)},r)}this.updateSharedOptions(d,r)}_drawLabels(){const t=this._ctx,o=this._nodes||new Map,e=this.getDataset(),r=c(e.size),l=Object(n.Xb)(e.borderWidth,1),f=Object(n.Xb)(e.nodeWidth,10),d=e.labels,{xScale:h,yScale:x}=this._cachedMeta;t.save();const y=this.chart.chartArea;for(const n of o.values()){const o=h.getPixelForValue(n.x),c=x.getPixelForValue(n.y),m=Math[r](n.in||n.out,n.out||n.in),w=Math.abs(x.getPixelForValue(n.y+m)-c),label=d&&d[n.key]||n.key;let v=o;t.fillStyle=e.color||"black",t.textBaseline="middle",o<y.width/2?(t.textAlign="left",v+=f+l+4):(t.textAlign="right",v-=l+4),this._drawLabel(label,c,w,t,v)}t.restore()}_drawLabel(label,t,o,e,r){const c=Object(n.p)(this.options.font,this.chart.options.font),l=Object(n.Mb)(label)?[]:function(t){const o=[],e=Object(n.Db)(t)?t:Object(n.Mb)(t)?[]:[t];for(;e.length;){const input=e.pop();"string"==typeof input?o.unshift.apply(o,input.split("\n")):Array.isArray(input)?e.push.apply(e,input):Object(n.Mb)(e)||o.unshift(""+input)}return o}(label),f=l.length,d=t+o/2,h=c.lineHeight,x=Object(n.Xb)(this.options.padding,h/2);if(e.font=c.string,f>1){const t=d-h*f/2+x;for(let i=0;i<f;i++)e.fillText(l[i],r,t+i*h)}else e.fillText(label,r,d)}_drawNodes(){const t=this._ctx,o=this._nodes||new Map,e=this.getDataset(),r=c(e.size),{xScale:l,yScale:f}=this._cachedMeta,d=Object(n.Xb)(e.borderWidth,1),h=Object(n.Xb)(e.nodeWidth,10);t.save(),t.strokeStyle=e.borderColor||"black",t.lineWidth=d;for(const e of o.values()){t.fillStyle=e.color;const o=l.getPixelForValue(e.x),n=f.getPixelForValue(e.y),c=Math[r](e.in||e.out,e.out||e.in),x=Math.abs(f.getPixelForValue(e.y+c)-n);d&&t.strokeRect(o,n,h,x),t.fillRect(o,n,h,x)}t.restore()}draw(){const t=this._ctx,data=this.getMeta().data||[],o=[];for(let i=0,t=data.length;i<t;++i){const t=data[i];t.from.color=t.options.colorFrom,t.to.color=t.options.colorTo,t.active&&o.push(t)}for(const t of o)t.from.color=t.options.colorFrom,t.to.color=t.options.colorTo;this._drawNodes();for(let i=0,o=data.length;i<o;++i)data[i].draw(t);this._drawLabels()}}O.id="sankey",O.defaults={dataElementType:"flow",animations:{numbers:{type:"number",properties:["x","y","x2","y2","height"]},progress:{easing:"linear",duration:t=>"data"===t.type?200*(t.parsed._custom.x-t.parsed.x):void 0,delay:t=>"data"===t.type?500*t.parsed.x+20*t.dataIndex:void 0},colors:{type:"color",properties:["colorFrom","colorTo"]}},transitions:{hide:{animations:{colors:{type:"color",properties:["colorFrom","colorTo"],to:"transparent"}}},show:{animations:{colors:{type:"color",properties:["colorFrom","colorTo"],from:"transparent"}}}}},O.overrides={interaction:{mode:"nearest",intersect:!0},datasets:{clip:!1,parsing:!0},plugins:{tooltip:{callbacks:{title:()=>"",label(t){const o=t.dataset.data[t.dataIndex];return o.from+" -> "+o.to+": "+o.flow}}},legend:{display:!1}},scales:{x:{type:"linear",bounds:"data",display:!1,min:0,offset:!1},y:{type:"linear",bounds:"data",display:!1,min:0,reverse:!0,offset:!1}},layout:{padding:{top:3,left:3,right:13,bottom:3}}};const S=(t,o,e,r)=>t<e?{cp1:{x:t+(e-t)/3*2,y:o},cp2:{x:t+(e-t)/3,y:r}}:{cp1:{x:t-(t-e)/3,y:0},cp2:{x:e+(t-e)/3,y:0}},E=(t,o,e)=>({x:t.x+e*(o.x-t.x),y:t.y+e*(o.y-t.y)});class j extends r.h{constructor(t){super(),this.options=void 0,this.x=void 0,this.y=void 0,this.x2=void 0,this.y2=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const{x:o,x2:e,y:r,y2:c,height:l,progress:progress}=this,{cp1:f,cp2:d}=S(o,r,e,c);0!==progress&&(t.save(),progress<1&&(t.beginPath(),t.rect(o,Math.min(r,c),(e-o)*progress+1,Math.abs(c-r)+l+1),t.clip()),function(t,{x:o,x2:e,options:r}){let c;"from"===r.colorMode?c=Object(n.Eb)(r.colorFrom).alpha(.5).rgbString():"to"===r.colorMode?c=Object(n.Eb)(r.colorTo).alpha(.5).rgbString():(c=t.createLinearGradient(o,0,e,0),c.addColorStop(0,Object(n.Eb)(r.colorFrom).alpha(.5).rgbString()),c.addColorStop(1,Object(n.Eb)(r.colorTo).alpha(.5).rgbString())),t.fillStyle=c,t.strokeStyle=c,t.lineWidth=.5}(t,this),t.beginPath(),t.moveTo(o,r),t.bezierCurveTo(f.x,f.y,d.x,d.y,e,c),t.lineTo(e,c+l),t.bezierCurveTo(d.x,d.y+l,f.x,f.y+l,o,r+l),t.lineTo(o,r),t.stroke(),t.closePath(),t.fill(),t.restore())}inRange(t,o,e){const{x:r,y:n,x2:c,y2:l,height:f}=this.getProps(["x","y","x2","y2","height"],e);if(t<r||t>c)return!1;const{cp1:d,cp2:h}=S(r,n,c,l),x=(t-r)/(c-r),y={x:c,y:l},a=E({x:r,y:n},d,x),b=E(d,h,x),m=E(h,y,x),w=E(a,b,x),v=E(b,m,x),M=E(w,v,x).y;return o>=M&&o<=M+f}inXRange(t,o){const{x:e,x2:r}=this.getProps(["x","x2"],o);return t>=e&&t<=r}inYRange(t,o){const{y:e,y2:r,height:n}=this.getProps(["y","y2","height"],o),c=Math.min(e,r),l=Math.max(e,r)+n;return t>=c&&t<=l}getCenterPoint(t){const{x:o,y:e,x2:r,y2:n,height:c}=this.getProps(["x","y","x2","y2","height"],t);return{x:(o+r)/2,y:(e+n+c)/2}}tooltipPosition(t){return this.getCenterPoint(t)}getRange(t){return"x"===t?this.width/2:this.height/2}}j.id="flow",j.defaults={colorFrom:"red",colorTo:"green",colorMode:"gradient",hoverColorFrom:(t,o)=>Object(n.cb)(o.colorFrom),hoverColorTo:(t,o)=>Object(n.cb)(o.colorTo)}}}]);